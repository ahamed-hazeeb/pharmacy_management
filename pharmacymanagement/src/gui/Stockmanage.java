/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Color;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Date;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import org.joda.time.DateTime;
import org.joda.time.Days;

/**
 *
 * @author dilshan
 */
public class Stockmanage extends javax.swing.JFrame {

    /**
     * Creates new form Stockmanage
     */
    public Stockmanage() {
        initComponents();
        try {
            Statement s = database.database.pharmacy().createStatement();

            DefaultTableModel df = (DefaultTableModel) jTable1.getModel();
            df.setRowCount(0);

            ResultSet rs = s.executeQuery("SELECT stock.stock_id, stock.med_id, medicine.name, stock.grn_id, stock.mfdate, stock.exdate, stock.quantity, stock.amount, stock.remaining, stock.fndate FROM stock INNER JOIN medicine ON stock.med_id = medicine.med_id");
            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString("stock_id"));
                v.add(rs.getString("med_id"));
                v.add(rs.getString("name"));
                v.add(rs.getString("grn_id"));
                v.add(rs.getString("mfdate"));
                v.add(rs.getString("exdate"));
                v.add(rs.getString("quantity"));
                v.add(rs.getString("amount"));
                v.add(rs.getString("remaining"));
                v.add(rs.getString("fndate"));
                df.addRow(v);
            }

            int i = jTable1.getRowCount();
            for (int a = 0; a < i; a++) {
                DateTime exdt = new DateTime(df.getValueAt(a, 5));
                DateTime tdy = new DateTime(new Date());
                
                Days d = Days.daysBetween(tdy, exdt);
                long dt = d.getDays();
                
                if (dt<7){
                    jTable1.setVisible(true);
                } else if(dt<30){
                    jTable1.setBackground(Color.orange);
                } else if(dt<60){
                    jTable1.setBackground(Color.yellow);
                } else {
                    jTable1.setBackground(Color.white);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jTextField1 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Stock Management");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Stock ID", "Medicine ID", "Medicine Name", "GRN ID", "Mf Date", "Ex Date", "QTY", "Amount", "Remaining", "Finished Date"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Cancel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Refresh");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Search By:");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Stock ID", "Medicine ID", "GRN ID", "Expiary Date" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jButton3.setText("Search");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox2, 0, 204, Short.MAX_VALUE)
                        .addGap(82, 82, 82)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(191, 191, 191)))
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 24, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
        new home().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            Statement s = database.database.pharmacy().createStatement();

            DefaultTableModel df = (DefaultTableModel) jTable1.getModel();
            df.setRowCount(0);

            ResultSet rs = s.executeQuery("SELECT stock.stock_id, stock.med_id, medicine.name, stock.grn_id, stock.mfdate, stock.exdate, stock.quantity, stock.amount, stock.remaining, stock.fndate FROM stock INNER JOIN medicine ON stock.med_id = medicine.med_id");
            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString("stock_id"));
                v.add(rs.getString("med_id"));
                v.add(rs.getString("name"));
                v.add(rs.getString("grn_id"));
                v.add(rs.getString("mfdate"));
                v.add(rs.getString("exdate"));
                v.add(rs.getString("quantity"));
                v.add(rs.getString("amount"));
                v.add(rs.getString("remaining"));
                v.add(rs.getString("fndate"));
                df.addRow(v);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            Statement s = database.database.pharmacy().createStatement();
            int i = jComboBox2.getSelectedIndex();
            DefaultTableModel df = (DefaultTableModel) jTable1.getModel();
            df.setRowCount(0);

            if (i == 0) {
                ResultSet rs = s.executeQuery("SELECT stock.stock_id, stock.med_id, medicine.name, stock.grn_id, stock.mfdate, stock.exdate, stock.quantity, stock.amount, stock.remaining, stock.fndate FROM stock INNER JOIN medicine ON stock.med_id = medicine.med_id WHERE stock.stock_id = '" + jTextField1.getText() + "'");
                while (rs.next()) {
                    Vector v = new Vector();
                    v.add(rs.getString("stock_id"));
                    v.add(rs.getString("med_id"));
                    v.add(rs.getString("name"));
                    v.add(rs.getString("grn_id"));
                    v.add(rs.getString("mfdate"));
                    v.add(rs.getString("exdate"));
                    v.add(rs.getString("quantity"));
                    v.add(rs.getString("amount"));
                    v.add(rs.getString("remaining"));
                    v.add(rs.getString("fndate"));
                    df.addRow(v);
                }
            } else if (i == 1) {
                ResultSet rs = s.executeQuery("SELECT stock.stock_id, stock.med_id, medicine.name, stock.grn_id, stock.mfdate, stock.exdate, stock.quantity, stock.amount, stock.remaining, stock.fndate FROM stock INNER JOIN medicine ON stock.med_id = medicine.med_id WHERE stock.med_id = '" + jTextField1.getText() + "'");
                while (rs.next()) {
                    Vector v = new Vector();
                    v.add(rs.getString("stock_id"));
                    v.add(rs.getString("med_id"));
                    v.add(rs.getString("name"));
                    v.add(rs.getString("grn_id"));
                    v.add(rs.getString("mfdate"));
                    v.add(rs.getString("exdate"));
                    v.add(rs.getString("quantity"));
                    v.add(rs.getString("amount"));
                    v.add(rs.getString("remaining"));
                    v.add(rs.getString("fndate"));
                    df.addRow(v);
                }
            } else if (i == 2) {
                ResultSet rs = s.executeQuery("SELECT stock.stock_id, stock.med_id, medicine.name, stock.grn_id, stock.mfdate, stock.exdate, stock.quantity, stock.amount, stock.remaining, stock.fndate FROM stock INNER JOIN medicine ON stock.med_id = medicine.med_id WHERE stock.grn_id = '" + jTextField1.getText() + "'");
                while (rs.next()) {
                    Vector v = new Vector();
                    v.add(rs.getString("stock_id"));
                    v.add(rs.getString("med_id"));
                    v.add(rs.getString("name"));
                    v.add(rs.getString("grn_id"));
                    v.add(rs.getString("mfdate"));
                    v.add(rs.getString("exdate"));
                    v.add(rs.getString("quantity"));
                    v.add(rs.getString("amount"));
                    v.add(rs.getString("remaining"));
                    v.add(rs.getString("fndate"));
                    df.addRow(v);
                }
            } else {
                ResultSet rs = s.executeQuery("SELECT stock.stock_id, stock.med_id, medicine.name, stock.grn_id, stock.mfdate, stock.exdate, stock.quantity, stock.amount, stock.remaining, stock.fndate FROM stock INNER JOIN medicine ON stock.med_id = medicine.med_id WHERE stock.exdate = '" + jTextField1.getText() + "'");
                while (rs.next()) {
                    Vector v = new Vector();
                    v.add(rs.getString("stock_id"));
                    v.add(rs.getString("med_id"));
                    v.add(rs.getString("name"));
                    v.add(rs.getString("grn_id"));
                    v.add(rs.getString("mfdate"));
                    v.add(rs.getString("exdate"));
                    v.add(rs.getString("quantity"));
                    v.add(rs.getString("amount"));
                    v.add(rs.getString("remaining"));
                    v.add(rs.getString("fndate"));
                    df.addRow(v);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Stockmanage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Stockmanage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Stockmanage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Stockmanage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Stockmanage().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
